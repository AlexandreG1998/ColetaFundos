# -*- coding: utf-8 -*-
"""ColetarDadosC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JfDv4yrePU4BryfsiWwJDSfGB__EW4U4
"""
#Importar e Instalar Dependencias em uma Máquina Virtual (Google Colab)
!pip install selenium
!apt-get update # to update ubuntu to correctly run apt install
!apt install chromium-chromedriver
!cp /usr/lib/chromium-browser/chromedriver /usr/bin
import sys
sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')
from selenium import webdriver

from selenium import webdriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.chrome.options import Options

import time
import pandas as pd
import numpy as np
import _thread as thread
import threading, queue

#Formatar Dados
def formatar_tabela(txt = None, index = None, fundo = None):
    txt2 = txt.split('\n')
    dados = []
    for i in range(4,len(txt2)):
        dados_ = []
        txt_ = txt2[i]
        txt_classe = txt2[i - 4]
        txt_cdg = txt2[i - 3]

        #print(txt_.find('negociação'))
        if(txt_.find('negociação') >= 0 and txt_classe == 'Ações'):
            
            txt_ = txt_.replace('.','')
            txt_ = txt_.replace(',','.')
            txt_sep = txt_.split(' ')
            dados_.append(fundo)
            dados_.append(index)
            
            dados_.append(txt_cdg)
            
            for k in range(2, len(txt_sep)):
                num = txt_sep[k]
                num_ = str(num)
                try:
                    num_ = float(num)
                except:
                    num_ = str(num)
                
                dados_.append(num_)
            
        if(len(dados_) > 0):
            dados.append(dados_)
    return(dados)

#Executar coleta de forma paralela (várias coletas simultâneas)
def coleta_multipla(url = None,fundo = None ,out_queue = None):

    chrome_options = webdriver.ChromeOptions()
    chrome_options.add_argument('--headless')
    chrome_options.add_argument('--no-sandbox')
    chrome_options.add_argument('--disable-dev-shm-usage')
    driver = webdriver.Chrome('chromedriver',chrome_options=chrome_options)
    driver.get(url)
    
    
    dados_totais = []
    
    time.sleep(np.random.uniform(1,5))
    
    driver.get(url)
    time.sleep(np.random.uniform(10,15))

    for i in range(3, 100):
        try:
            select = Select(driver.find_element_by_name('ddCOMPTC'))
                
            select.select_by_index(i)

            time.sleep(np.random.uniform(12,20))

            tabela = driver.find_element_by_id("trAplics")
            txt = tabela.text

            formatada = formatar_tabela(txt = txt, index = i, fundo = fundo)
            dados_totais.extend(formatada)
            print(formatada)
        except:
            print('Erro no fundo : ' + fundo + ' no indice :  ' + str(i))
            break
    driver.close()
    
    out_queue.put(dados_totais)


#Links Fundos
urls = ['https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=133109&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=154797&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=160806&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=50201&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=176010&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=121198&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=106855&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=161166&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=170442&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=160921&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=176643&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=176444&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=62185&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=103892&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=91535&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=126024&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=196396&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=57950&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=141444&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=72581&SemFrame=',
'https://cvmweb.cvm.gov.br/SWB/Sistemas/SCW/CPublica/CDA/CPublicaCDA.aspx?PK_PARTIC=61848&SemFrame=',
]

#Nomes Instituições
instituicoes = ['ATMOS INSTITUCIONAL MASTER FUNDO DE INVESTIMENTO DE AÇÕES',
'ALASKA BLACK INSTITUCIONAL FUNDO DE INVESTIMENTO DE ACOES',
'XINGÓ FUNDO DE INVESTIMENTO DE ACOES',
'BOREAL AÇÕES III FUNDO DE INVESTIMENTO DE AÇÕES INVESTIMENTO NO EXTERIOR',
'KADIMA LONG BIAS FUNDO DE INVESTIMENTO MULTIMERCADO',
'KADIMA HIGH VOL FUNDO DE INVESTIMENTO MULTIMERCADO',
'KADIMA EQUITIES MASTER FUNDO DE INVESTIMENTO EM AÇÕES',
'REAL INVESTOR FUNDO DE INVESTIMENTO MULTIMERCADO',
'ABSOLUTE PACE LONG BIASED MASTER FUNDO DE INVESTIMENTO EM AÇÕES',
'PANDHORA ESSENCIAL MASTER FUNDO DE INVESTIMENTO MULTIMERCADO',
'PANDHORA LONG BIAS FUNDO DE INVESTIMENTO EM COTAS DE FUNDOS DE INVESTIMENTO MULTIMERCADO',
'PANDHORA LONG BIAS MASTER FUNDO DE INVESTIMENTO MULTIMERCADO',
'BB TOP AÇÕES QUANTITATIVO FUNDO DE INVESTIMENTO',
'SMARTQUANT FUNDO DE INVESTIMENTO MULTIMERCADO',
'SANTANDER FI TOP MULTIMERCADO',
'SANTANDER MULTIMERCADO MACRO BRASIL CRESCIMENTO FI',
'BB TOP AÇÕES AGRO FUNDO DE INVESTIMENTO EM AÇÕES',
'TROPICO VALUE FUNDO DE INVESTIMENTO DE AÇÕES',
'PER VALUE FUNDO DE INVESTIMENTO EM AÇÕES',
'RIO VERDE SMALL CAPS FUNDO DE INVESTIMENTO EM AÇÕES',
'VERDE MASTER FUNDO DE INVESTIMENTO MULTIMERCADO',
]

queues     = []
threadings = []

resultados = []

for i in range(len(urls)):
    queues.append(queue.Queue())

for i in range(len(urls)):
    threadings.append(threading.Thread(target = coleta_multipla,
                                 args = (urls[i], instituicoes[i], queues[i]),group = None))

for j in range(len(threadings)):
    threadings[j].start()

for j in range(len(threadings)):
    threadings[j].join()
        
for j in range(len(queues)):
    r = queues[j].get()
    resultados.append(r)

resultados_ = pd.DataFrame(resultados[0])

for i in range(1, len(resultados)):
    resultados_b = pd.DataFrame(resultados[i])
    resultados_ = pd.concat((resultados_, resultados_b), axis = 0)



resultados_.columns = ['Fundo', 'IndiceMes', 'Ativo', 'QuantVendida', 'FinanceiroVendido', 'QuantidadeComprada', 'FinanceiroComprado',
                       'QuantidadeFinal', 'ValMercado', 'PartCarteira']

resultados_.head()

len(resultados_)

#Salvar no Google Drive
from google.colab import drive

drive.mount('/content/gdrive')

#dados = pd.read_csv('/content/gdrive/My Drive/Modelo Imagem/dolfut.csv', sep = ';', decimal = ',')

resultados_.to_csv('/content/gdrive/My Drive/Modelo Imagem/dados_fundos_cvm3.csv', sep = ';', decimal = ',', encoding = 'latin-1', index = False)

